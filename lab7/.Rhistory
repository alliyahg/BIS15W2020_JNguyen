selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Year", y="FilteredCountFR", fill=input$fill)) +
geom_col() + theme_light(base_size = 18) +
coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col() + theme_light(base_size = 18) +
coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col() + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col() + theme_light(base_size = 18) +
coord_flip() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "1000px", height = "800px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
lapply(UC_admit$Academic_Yr, as.factor)
lapply(UC_admit$Academic_Yr, as.factor)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "1000px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "750px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip() +
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "900px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "900px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge", alpha=0.7) + theme_light(base_size = 18) +
coord_flip()+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "900px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Academic Year"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Campus", "Category", "Ethnicity"),
selected = "Campus"),
plotOutput("plot", width = "900px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Academic_Yr", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip() +
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(),
dashboardBody(
selectInput("fill", "Select variable", choices = c("Academic_Yr", "Campus", "Category"),
selected = "Academic_Yr"),
plotOutput("plot", width = "900px", height = "600px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(UC_admit, aes_string(x = "Ethnicity", y="FilteredCountFR", fill=input$fill)) +
geom_col(position = "dodge") + theme_light(base_size = 18) +
coord_flip()+
labs(y="Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
